= I use the Instance API to obtain bean instances. Why does it seem to cause a memory leak?

The ++Instance++ API is often used in loops to obtain multiple instances of a certain bean. Here is an example:

[source,java]
----
    @Inject 
    private Instance<A> instance;
    
    public void foo() {
        // obtain multiple instances of A
        for (;;) {
            instance.get();
    }
----

By default, each object obtained using ++Instance++ remains managed (is not released) until the ++Instance++ object is destroyed. This can easily create a memory leak. 
Therefore, the application should explicitly destroy obtained instances when it no longer needs by calling the http://docs.jboss.org/cdi/api/1.1/javax/enterprise/inject/Instance.html#destroy(T)[Instance.destroy()] method.



